apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2021-07-01T11:31:19Z"
  labels:
    pod: a
  name: a
  namespace: netpol-3756-z
  resourceVersion: "1283502"
  uid: bac10006-6662-407e-b5cd-e0e51ed0b294
spec:
  containers:
  - command:
    - /agnhost
    - serve-hostname
    - --tcp
    - --http=false
    - --port
    - "80"
    image: k8s.gcr.io/e2e-test-images/agnhost:2.32
    imagePullPolicy: IfNotPresent
    name: cont-80-tcp
    ports:
    - containerPort: 80
      name: serve-80-tcp
      protocol: TCP
    resources: {}
    securityContext: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6mgq7
      readOnly: true
  - command:
    - /agnhost
    - serve-hostname
    - --udp
    - --http=false
    - --port
    - "80"
    image: k8s.gcr.io/e2e-test-images/agnhost:2.32
    imagePullPolicy: IfNotPresent
    name: cont-80-udp
    ports:
    - containerPort: 80
      name: serve-80-udp
      protocol: UDP
    resources: {}
    securityContext: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6mgq7
      readOnly: true
  - command:
    - /agnhost
    - serve-hostname
    - --tcp
    - --http=false
    - --port
    - "81"
    image: k8s.gcr.io/e2e-test-images/agnhost:2.32
    imagePullPolicy: IfNotPresent
    name: cont-81-tcp
    ports:
    - containerPort: 81
      name: serve-81-tcp
      protocol: TCP
    resources: {}
    securityContext: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6mgq7
      readOnly: true
  - command:
    - /agnhost
    - serve-hostname
    - --udp
    - --http=false
    - --port
    - "81"
    image: k8s.gcr.io/e2e-test-images/agnhost:2.32
    imagePullPolicy: IfNotPresent
    name: cont-81-udp
    ports:
    - containerPort: 81
      name: serve-81-udp
      protocol: UDP
    resources: {}
    securityContext: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6mgq7
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: a-ms-2004-win-1
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 0
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-6mgq7
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2021-07-01T11:31:19Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2021-07-01T11:31:56Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2021-07-01T11:31:56Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2021-07-01T11:31:19Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://42fb3183c57144e6d278bb5846f91471d83c60e47e2d0c2e922d4dd4a74d9bcf
    image: k8s.gcr.io/e2e-test-images/agnhost:2.32
    imageID: docker-pullable://k8s.gcr.io/e2e-test-images/agnhost@sha256:758db666ac7028534dba72e7e9bb1e57bb81b8196f976f7a5cc351ef8b3529e1
    lastState: {}
    name: cont-80-tcp
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2021-07-01T11:31:35Z"
  - containerID: docker://84aacf3dc170fd04e44b61a63cedd2feb61b6195f8024370559ef53dcef77a00
    image: k8s.gcr.io/e2e-test-images/agnhost:2.32
    imageID: docker-pullable://k8s.gcr.io/e2e-test-images/agnhost@sha256:758db666ac7028534dba72e7e9bb1e57bb81b8196f976f7a5cc351ef8b3529e1
    lastState: {}
    name: cont-80-udp
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2021-07-01T11:31:39Z"
  - containerID: docker://4c29ca4127a4dedbe7199e640b322065ae13a5704dba18ce32859d5e621c1698
    image: k8s.gcr.io/e2e-test-images/agnhost:2.32
    imageID: docker-pullable://k8s.gcr.io/e2e-test-images/agnhost@sha256:758db666ac7028534dba72e7e9bb1e57bb81b8196f976f7a5cc351ef8b3529e1
    lastState: {}
    name: cont-81-tcp
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2021-07-01T11:31:41Z"
  - containerID: docker://a7368801e232e843778927e4f7fd8877c394aa2342e66f1a7747bb0e30fff262
    image: k8s.gcr.io/e2e-test-images/agnhost:2.32
    imageID: docker-pullable://k8s.gcr.io/e2e-test-images/agnhost@sha256:758db666ac7028534dba72e7e9bb1e57bb81b8196f976f7a5cc351ef8b3529e1
    lastState: {}
    name: cont-81-udp
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2021-07-01T11:31:42Z"
  hostIP: 10.176.26.95
  phase: Running
  podIP: 192.168.251.137
  podIPs:
  - ip: 192.168.251.137
  qosClass: BestEffort
  startTime: "2021-07-01T11:31:19Z"
